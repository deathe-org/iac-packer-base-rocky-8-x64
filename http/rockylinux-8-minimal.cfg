# ----------------------------------------------------------------------------
# References
# - https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/system_design_guide/kickstart-commands-and-options-reference_system-design-guide
# - https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/performing_an_advanced_rhel_8_installation/index#kickstart-commands-and-options-reference_installing-rhel-as-an-experienced-user
# - https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/deploying_rhel_8_on_amazon_web_services/assembly_deploying-a-virtual-machine-on-aws_cloud-content-aws
# - https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/customizing_anaconda/customizing-the-boot-menu_customizing-anaconda
# - https://github.com/oracle/oracle-linux/blob/main/oracle-linux-image-tools/distr/ol8-slim/ol8-ks.cfg
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
# Commands
# ----------------------------------------------------------------------------
authselect select minimal with-faillock with-silent-lastlog with-pamaccess
cdrom
eula --agreed
firstboot --disabled
skipx
text --non-interactive

# Minimal ISO contains BaseOS only; either need to use full DVD ISO or enable public repo during install
repo --name="appstream" --baseurl="http://download.rockylinux.org/pub/rocky/8/AppStream/x86_64/os/"
repo --name="extras" --baseurl="http://download.rockylinux.org/pub/rocky/8/extras/x86_64/os/"
%include /tmp/lang.inc
%include /tmp/keyboard.inc
%include /tmp/timezone.inc
%include /tmp/rootpw.inc
%include /tmp/bootloader.inc
%include /tmp/network.inc
%include /tmp/firewall.inc
%include /tmp/selinux.inc
%include /tmp/services-disabled.inc
%include /tmp/services-enabled.inc
%include /tmp/storage-partitions-prep.inc
%include /tmp/storage-partitions-boot.inc
%include /tmp/storage-partitions.inc
%include /tmp/storage-volume-groups.inc
%include /tmp/storage-volume-groups-logical-volumes.inc
%include /tmp/end.inc

# ----------------------------------------------------------------------------
# Addons
# ----------------------------------------------------------------------------
%addon com_redhat_kdump --disable
%end

# ----------------------------------------------------------------------------
# Packages
# ----------------------------------------------------------------------------
# %packages --ignoremissing --excludedocs --excludeWeakdeps
%packages --ignoremissing --excludeWeakdeps
%include /tmp/packages.inc
%include /tmp/packages-exclude.inc
%end

# ----------------------------------------------------------------------------
# Pre-installation Script
# ----------------------------------------------------------------------------
%pre

get_boot_parameter ()
{
	local KEY="${1}"
	local DEFAULT="${2:-}"
	local VALUE="${DEFAULT}"

	if grep -Eiq "${KEY}=\"[^\"]*\"" /proc/cmdline
	then
		# Extract space seperated values between double quotes.
		VALUE="$(
			/bin/sed "s~.*${KEY}=\"\([^\"]*\).*~\1~" \
			/proc/cmdline
		)"
	elif grep -Eiq "${KEY}=[^ ]" /proc/cmdline
	then
		VALUE="$(
			/bin/sed "s~.*${KEY}=\([^ ]*\).*~\1~" \
			/proc/cmdline
		)"
	fi

	printf -- "${VALUE}"
}

BOOT_TIMEOUT="$(
  get_boot_parameter BOOT_TIMEOUT 5
)"

BOOTLOADER_APPEND="$(
  get_boot_parameter BOOTLOADER_APPEND
)"

BOOTLOADER_DISABLED="$(
  get_boot_parameter BOOTLOADER_DISABLED false
)"

FIREWALL_DISABLED="$(
  get_boot_parameter FIREWALL_DISABLED false
)"

KEYTABLE="$(
  get_boot_parameter KEYTABLE us
)"

LANG="$(
  get_boot_parameter LANG en_US.UTF-8
)"

LV_ROOT_FSTYPE="$(
  get_boot_parameter LV_ROOT_FSTYPE xfs
)"

LV_ROOT_MKFSOPTIONS="$(
  get_boot_parameter LV_ROOT_MKFSOPTIONS
)"

LV_ROOT_SIZE="$(
  get_boot_parameter LV_ROOT_SIZE 1024
)"

LV_SWAP_SIZE="$(
  get_boot_parameter LV_SWAP_SIZE 512
)"

PV_ROOT_FSTYPE="$(
  get_boot_parameter PV_ROOT_FSTYPE lvmpv
)"

PV_ROOT_MKFSOPTIONS="$(
  get_boot_parameter PV_ROOT_MKFSOPTIONS
)"

PART_BOOT_FSTYPE="$(
  get_boot_parameter PART_BOOT_FSTYPE xfs
)"

PART_BOOT_SIZE="$(
  get_boot_parameter PART_BOOT_SIZE 250
)"

ROOTPW="$(
  get_boot_parameter ROOTPW rocky
)"

SELINUX="$(
  get_boot_parameter SELINUX enforcing
)"

TIMEZONE="$(
  get_boot_parameter TIMEZONE Etc/UTC
)"

VG_ROOT_RESERVED_SPACE="$(
  get_boot_parameter VG_ROOT_RESERVED_SPACE 0
)"

# Build up the bootloader command and parameters
CMD_BOOTLOADER="bootloader --timeout=${BOOT_TIMEOUT}"
if [[ ${BOOTLOADER_DISABLED} == true ]]; then
	CMD_BOOTLOADER+=" --disabled"
else
	CMD_BOOTLOADER+=" --location=mbr"
	if [[ -n ${BOOTLOADER_APPEND} ]]; then
		CMD_BOOTLOADER+=" --append=\"${BOOTLOADER_APPEND}\""
	fi
fi

# Build up the firewall command and parameters
CMD_FIREWALL="firewall"
if [[ ${FIREWALL_DISABLED} == true ]]; then
	CMD_FIREWALL+=" --disabled"
else
	CMD_FIREWALL+=" --enabled --service=ssh"
fi

cat > /tmp/bootloader.inc <<-EOF
${CMD_BOOTLOADER}
EOF

cat > /tmp/bootloader-update.inc <<-EOF
# Add drivers and reduce the size of the initramfs image.
# - Verify loaded kernel drivers using lsinitrd
/bin/dracut -f --add-drivers "ena nvme xen-blkfront xen-netfront" -H --xz
EOF

cat > /tmp/enable-repos.inc <<-EOF
/bin/dnf config-manager --enable powertools
EOF

cat > /tmp/end.inc <<-EOF
reboot
EOF

cat > /tmp/firewall.inc <<-EOF
${CMD_FIREWALL}
EOF

cat > /tmp/keyboard.inc <<-EOF
keyboard ${KEYTABLE}
EOF

cat > /tmp/lang.inc <<-EOF
lang C.UTF8 --addsupport="${LANG}"
EOF

cat > /tmp/network.inc <<-EOF
network --device=link --bootproto=dhcp --onboot=yes --hostname=localhost.localdomain
EOF

# - rsyslog (appstream repo)
# - epel-release (extras repo)
cat > /tmp/packages.inc <<-EOF
@^minimal-environment
cloud-utils-growpart
dhcp-client
nfs-utils
qemu-guest-agent
rng-tools
tar
tuned
yum-utils
rsyslog
epel-release
EOF

cat > /tmp/packages-exclude.inc <<-EOF
-biosdevname
-cockpit
-dracut-config-rescue
-efibootmgr
-glibc-all-langpacks
-iwl*-firmware
-microcode_ctl
-plymouth
-rdma
EOF

cat > /tmp/packages-configure.inc <<-EOF
/usr/sbin/tuned-adm profile virtual-guest
EOF

cat > /tmp/packages-remove.inc <<-EOF
dnf --debuglevel=1 -y remove firewalld linux-firmware
EOF

cat > /tmp/rootpw.inc <<-EOF
rootpw ${ROOTPW}
EOF

cat > /tmp/selinux.inc <<-EOF
selinux --${SELINUX}
EOF

cat > /tmp/services-disabled.inc <<-EOF
services --disabled="kdump"
EOF

cat > /tmp/services-enabled.inc <<-EOF
services --enabled="tuned"
EOF

touch /tmp/storage-partitions-boot.inc
if [[ ! ${PART_BOOT_SIZE} -eq 0 ]]; then
	cat >> /tmp/storage-partitions-boot.inc <<-EOF
	part /boot --label=boot --size=${PART_BOOT_SIZE} --fstype=${PART_BOOT_FSTYPE}
	EOF
fi

cat > /tmp/storage-partitions-prep.inc <<-EOF
zerombr
clearpart --all --initlabel
EOF

if [[ ${PV_ROOT_FSTYPE} == lvmpv ]]; then
	cat > /tmp/storage-partitions.inc <<-EOF
	part pv.01 --label=root --size=1 --fstype=${PV_ROOT_FSTYPE} --grow
	EOF
else
	cat > /tmp/storage-partitions.inc <<-EOF
	part / --label=root --size=1 --fstype=${PV_ROOT_FSTYPE} --grow --mkfsoptions="${PV_ROOT_MKFSOPTIONS}"
	EOF
fi

touch /tmp/storage-volume-groups.inc
if [[ ${PV_ROOT_FSTYPE} == lvmpv ]]; then
	cat >> /tmp/storage-volume-groups.inc <<-EOF
	volgroup vg_system --pesize=32768 --reserved-space=${VG_ROOT_RESERVED_SPACE} pv.01
	EOF
fi

touch /tmp/storage-volume-groups-logical-volumes.inc
if [[ ${PV_ROOT_FSTYPE} == lvmpv ]] && [[ ! ${LV_SWAP_SIZE} -eq 0 ]]; then
	cat >> /tmp/storage-volume-groups-logical-volumes.inc <<-EOF
	logvol swap --label=swap --vgname=vg_system --name=lv_swap --size=${LV_SWAP_SIZE} --fstype=swap
	EOF
fi

if [[ ${PV_ROOT_FSTYPE} == lvmpv ]]; then
	cat >> /tmp/storage-volume-groups-logical-volumes.inc <<-EOF
	logvol / --label=root --vgname=vg_system --name=lv_root --size=${LV_ROOT_SIZE} --fstype=${LV_ROOT_FSTYPE} --grow --mkfsoptions="${LV_ROOT_MKFSOPTIONS}"
	EOF
fi

cat > /tmp/timezone.inc <<-EOF
timezone ${TIMEZONE} --utc
EOF

%end

# ----------------------------------------------------------------------------
# Post-installation Script
# ----------------------------------------------------------------------------
%post
%include /tmp/packages-remove.inc
%include /tmp/packages-configure.inc
%include /tmp/bootloader-update.inc
%include /tmp/enable-repos.inc
%end